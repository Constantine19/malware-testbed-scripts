#!/usr/bin/python
import copy
import sys
import os

def one_gram(malware_folders): 
    all_dics = {}
    reading = 0
    strace_read = 0
    d = {}

    ## POPULATE d
    with open('../strace_output') as f:
        lines = f.readlines()
        for line in lines:
            if reading == 0:
                if '#####################' in line:
                    reading = 1
                    continue
            if reading == 1:
                if 'malware_' in line and 'exec' not in line and "proc" not in line:
                    strace_read = 1
                    continue
                if '#######################' in line:
                    reading = 0
                    strace_read = 0
            if strace_read == 1:
                line = line.split('(')
                if 'strace:' not in line[0] and line[0][0].isalpha():
                    if line[0] not in d.keys():
                        d[line[0]] = 0

    reading = 0
    strace_read = 0
    with open('../strace_output') as f:
        lines = f.readlines()
        for line in lines:
            if reading == 0:
                if '###########################' in line:
                    new_dic = copy.deepcopy(d)
                    reading = 1
                    continue
            if reading == 1:
                if 'malware_' in line and 'exec' not in line and "proc" not in line:
                    line = line.split('/')
                    name = line[3].strip()
                    print name
                    strace_read = 1
                    continue
                if '###################' in line:
                    reading = 0
                    strace_read = 0
                    all_dics[name] = new_dic
            if strace_read == 1:
                line = line.split('(')
                if 'strace: ' not in line[0] and line[0][0].isalpha():
                    new_dic[line[0]] += 1
    one_gram_write(all_dics, "/one_gram_all", malware_folders)

def one_gram_no_zero(malware_folders): 
    all_dics = {}
    reading = 0
    strace_read = 0
    with open('../strace_output') as f:
        lines = f.readlines()
        for line in lines:
            if reading == 0:
                if '###########################' in line:
                    new_dic = {}
                    reading = 1
                    continue
            if reading == 1:
                if 'malware_' in line and 'exec' not in line and "proc" not in line:
                    line = line.split('/')
                    name = line[3].strip()
                    strace_read = 1
                    continue
                if '###################' in line:
                    reading = 0
                    strace_read = 0
                    all_dics[name] = new_dic
            if strace_read == 1:
                line = line.split('(')
                if 'strace: ' not in line[0] and line[0][0].isalpha():
                    if line[0] not in new_dic.keys():
                        new_dic[line[0]] = 0
                    new_dic[line[0]] += 1
    one_gram_write(all_dics, "/one_gram", malware_folders)

def one_gram_write(all_dics, string, malware_folders):
    for key, value in all_dics.items():
        for malware_dir in malware_folders:
            for malware in os.listdir(malware_dir):
                #print malware_dir + malware + '/' + str(key) + "_dir"
                if os.path.isdir(malware_dir + malware + '/' + str(key) ):
                    f = open(malware_dir + malware + '/' + str(key)  + string, "w+")
                    f.write(key + "\n")
                    for key_2, value_2 in all_dics[key].items():
                        f.write(key_2 + "," + str(value_2) + "\n")
                    f.close()
                    print "found in ", key, malware
                #else:
                #    print "in strace_output, malware not found", key, malware

#2-grams
def two_gram(malware_folders):
    all_dics = {}
    reading = 0
    strace_read = 0
    d = {}
    current = None
    prev = None

    # POPULATE d
    with open('../strace_output') as f:
        lines = f.readlines()
        for line in lines:
            if reading == 0:
                if '#####################' in line:
                    reading = 1
                    continue
            if reading == 1:
                if 'malware_' in line and 'exec' not in line and "proc" not in line:
                    strace_read = 1
                    continue
                if '#######################' in line:
                    reading = 0
                    strace_read = 0
            if strace_read == 1:
                line = line.split('(')
                if 'strace:' not in line[0] and line[0][0].isalpha():
                    prev = current
                    current = line[0]
                    if prev != None and current != None:
                        two_gram = (prev,current)
                        d[ two_gram ] = 0

    reading = 0
    strace_read = 0
    current = None
    prev = None
    with open('../strace_output') as f:
        lines = f.readlines()
        for line in lines:
            if reading == 0:
                if '###########################' in line:
                    new_dic = copy.deepcopy(d)
                    reading = 1
                    continue
            if reading == 1:
                if 'malware_' in line and 'exec' not in line and "proc" not in line:
                    line = line.split('/')
                    name = line[3].strip()
                    strace_read = 1
                    continue
                if '###################' in line:
                    reading = 0
                    strace_read = 0
                    all_dics[name] = new_dic
            if strace_read == 1:
                line = line.split('(')
                if 'strace: ' not in line[0] and line[0][0].isalpha():
                    prev = current
                    current = line[0]
                    if prev != None and current != None:
                        two_gram = (prev,current)
                        new_dic[ two_gram ] += 1
    two_gram_write(all_dics, "/two_gram_all", malware_folders)

def two_gram_no_zero(malware_folders): 
    all_dics = {}
    reading = 0
    strace_read = 0
    d = {}
    current = None
    prev = None

    with open('../strace_output') as f:
        lines = f.readlines()
        for line in lines:
            if reading == 0:
                if '###########################' in line:
                    new_dic = {}
                    reading = 1
                    continue
            if reading == 1:
                if 'malware_' in line and 'exec' not in line and "proc" not in line:
                    line = line.split('/')
                    name = line[3].strip()
                    strace_read = 1
                    continue
                if '###################' in line:
                    reading = 0
                    strace_read = 0
                    all_dics[name] = new_dic
            if strace_read == 1:
                line = line.split('(')
                if 'strace: ' not in line[0] and line[0][0].isalpha():
                    prev = current
                    current = line[0]
                    if prev != None and current != None:
                        two_gram = (prev,current)
                        if two_gram not in new_dic.keys():
                            new_dic[two_gram] = 0
                        new_dic[ two_gram ] += 1
    two_gram_write(all_dics, "/two_gram", malware_folders)

def two_gram_write(all_dics, string, malware_folders):
    for key, value in all_dics.items():
        for malware_dir in malware_folders:
            for malware in os.listdir(malware_dir):
                if os.path.isdir(malware_dir + malware + '/' + str(key)):
                    f = open(malware_dir + malware + '/' + str(key) + string, "w+")
                    f.write(key + "\n")
                    for key_2, value_2 in all_dics[key].items():
                        f.write(key_2[0] + "," + key_2[1] + "," + str(value_2) + "\n")
                    f.close()
                    print "FOUND: ", key
                #else:
                #    print "in strace_output, malware not found", key
# 3-grams
def three_gram(malware_folders):
    all_dics = {}
    reading = 0
    strace_read = 0
    d = {}
    current = None
    prev_1 = None
    prev_2 = None

    # POPULATE d
    with open('../strace_output') as f:
        lines = f.readlines()
        for line in lines:
            if reading == 0:
                if '#####################' in line:
                    reading = 1
                    continue
            if reading == 1:
                if 'malware_' in line and 'exec' not in line and "proc" not in line:
                    strace_read = 1
                    continue
                if '#######################' in line:
                    reading = 0
                    strace_read = 0
            if strace_read == 1:
                line = line.split('(')
                if 'strace:' not in line[0] and line[0][0].isalpha():
                    prev_2 = prev_1
                    prev_1 = current
                    current = line[0]
                    if current != None and prev_2 != None and prev_1 != None:
                        three_gram = (prev_2, prev_1, current)
                        d[ three_gram ] = 0

    reading = 0
    strace_read = 0
    current = None
    prev_2 = None
    prev_1 = None
    with open('../strace_output') as f:
        lines = f.readlines()
        for line in lines:
            if reading == 0:
                if '###########################' in line:
                    new_dic = copy.deepcopy(d)
                    reading = 1
                    continue
            if reading == 1:
                if 'malware_' in line and 'exec' not in line and "proc" not in line:
                    line = line.split('/')
                    name = line[3].strip()
                    strace_read = 1
                    continue
                if '###################' in line:
                    reading = 0
                    strace_read = 0
                    all_dics[name] = new_dic
            if strace_read == 1:
                line = line.split('(')
                if 'strace: ' not in line[0] and line[0][0].isalpha():
                    prev_2 = prev_1
                    prev_1 = current
                    current = line[0]
                    if current != None and prev_2 != None and prev_1 != None:
                        three_gram = (prev_2,prev_1, current)
                        new_dic[ three_gram ] += 1
    three_gram_write(all_dics, "/three_gram_all", malware_folders)

def three_gram_no_zero(malware_folders):
    all_dics = {}
    reading = 0
    strace_read = 0
    d = {}
    current = None
    prev_1 = None
    prev_2 = None

    with open('../strace_output') as f:
        lines = f.readlines()
        for line in lines:
            if reading == 0:
                if '###########################' in line:
                    new_dic = {}
                    reading = 1
                    continue
            if reading == 1:
                if 'malware_' in line and 'exec' not in line and "proc" not in line:
                    line = line.split('/')
                    name = line[3].strip()
                    strace_read = 1
                    continue
                if '###################' in line:
                    reading = 0
                    strace_read = 0
                    all_dics[name] = new_dic
            if strace_read == 1:
                line = line.split('(')
                if 'strace: ' not in line[0] and line[0][0].isalpha():
                    prev_2 = prev_1
                    prev_1 = current
                    current = line[0]
                    if current != None and prev_2 != None and prev_1 != None:
                        three_gram = (prev_2,prev_1, current)
                        if three_gram not in new_dic.keys():
                            new_dic[three_gram] = 0
                        new_dic[ three_gram ] += 1
    print len(all_dics)
    three_gram_write(all_dics, "/three_gram", malware_folders)

def three_gram_write(all_dics, string, malware_folders):
    for key, value in all_dics.items():
        for malware_dir in malware_folders:
            for malware in os.listdir(malware_dir):
                if os.path.isdir(malware_dir + malware + '/' + str(key)):
                    f = open(malware_dir + malware + '/' + str(key) + string, "w+")
                    f.write(key + "\n")
                    for key_2, value_2 in all_dics[key].items():
                        f.write(key_2[0] + "," + key_2[1]  + "," + key_2[2] + "," + str(value_2) + "\n")
                    f.close()
                    print "found: ", key
                #else:
                #    print "malware not on system", key

def main():
    if len(sys.argv) != 2:
        print "please insert argument (1-3)"
        exit()
    malware_folders = ["../malware_static/", "../malware_dynamic-static/"]
    if sys.argv[1] == "1":
        one_gram(malware_folders)
        one_gram_no_zero(malware_folders)
    elif sys.argv[1] == "2":
        two_gram(malware_folders)
        two_gram_no_zero(malware_folders)
    elif sys.argv[1] == "3":
        three_gram(malware_folders)
        three_gram_no_zero(malware_folders)

if __name__ == "__main__":
    main()
